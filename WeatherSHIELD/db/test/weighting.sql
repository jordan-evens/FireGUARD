use HINDCAST
go

DECLARE @OffsetMonths as INT
DECLARE @NumberMonths as INT
DECLARE @Latitude as FLOAT
DECLARE @Longitude as FLOAT
DECLARE @MonthPower as INT

-- for april
--SET @OffsetMonths = -3
SET @OffsetMonths = 0
SET @NumberMonths = 6
SET @Latitude = 46.48330
SET @Longitude = -84.51670
SET @MonthPower = 4

SELECT
    h.[Year],
    @NumberMonths AS NumberMonths,
    s.START_FROM,
    s.AVG_VALUE,
    s.OM,
    s.RM,
    s.Value,
	Hindcast.FCT_GradeHistoric(s.Value) as [Grade],
    (127501*POWER(s.Value, 3) - (337471*POWER(s.Value, 2)) + (297584*s.Value) - 87415.3) as [Grade2],
    (122353*POWER(s.Value, 3) - (323298*POWER(s.Value, 2)) + (284615*s.Value) - 83472.4) as [Grade3],
    (17327.5*POWER(s.Value, 3) - (42596.8*POWER(s.Value, 2)) + (34888.9*s.Value) - 9519.03) as [Grade4],
    (14099.3*POWER(s.Value, 3) - (36524.2*POWER(s.Value, 2)) + (31563*s.Value) - 9096.96) as [Grade5],
    (4177.58*POWER(s.Value, 3) - (10029.3*POWER(s.Value, 2)) + (8042.19*s.Value) - 2150.97) as [Grade6],
    (4177.58*POWER(s.Value, 3) - (10029.3*POWER(s.Value, 2)) + (8042.19*s.Value) - 2153.97) as [Grade7],
    (1762.42*POWER(s.Value, 3) - (3896.67*POWER(s.Value, 2)) + (2884.06*s.Value) - 713.549) as [Grade8],
    (1262.63*POWER(s.Value, 3) - (2855.11*POWER(s.Value, 2)) + (2163.74*s.Value) - 549.082) as [Grade9],
    (POWER(RM, @MonthPower)) AS MV,
    (POWER(2, RM)) AS MV2,
    (POWER(@MonthPower, RM)) AS MV3,
    (POWER(RM, 2)) AS MV4,
    (POWER(RM, 1.5)) AS MV5,
    (POWER(RM, 1.25)) AS MV6,
    (POWER(RM, 1.75)) AS MV7,
    ((-3.95*POWER(OM, 2)) + (14.95 * OM) + 25) AS MV8,
    ((0.0555556*POWER(OM, 3)) + (-0.619048*POWER(OM, 2)) + (1.03968 * OM) + 5.14286) AS MV9,
    ((6.0/9*POWER(OM, 3)) + (-6.42857*POWER(OM, 2)) + (10.4762 * OM) + 26.7143) AS MV10,
    ((-0.0757576*POWER(OM, 4)) + (0.92424242*POWER(OM, 3)) + (-3.40152*POWER(OM, 2)) + (2.2105 * OM) + 7.18628) AS MV11,
    ((-0.0757576*POWER(OM, 4)) + (1.22727*POWER(OM, 3)) + (-6.62879*POWER(OM, 2)) + (12.0893 * OM) + 0.574269) AS MV12,
    (POWER(ABS(RM - 0.5), 1.5)) AS MV13,
    (POWER(ABS(RM + 0.5), 1.5)) AS MV14,
    (POWER(ABS(RM + 1.5), 1.5)) AS MV15,
    (POWER(ABS(RM + 1.5), 1.25)) AS MV16,
    (POWER(ABS(RM + 1), 1.5)) AS MV17,
    (POWER(ABS(RM + 1), 1.25)) AS MV18,
    (POWER(ABS(RM + 1.25), 1.5)) AS MV19,
    (POWER(ABS(RM + 1.25), 1.25)) AS MV20,
	(POWER(ABS(RM + 0.75), 1.5)) AS MV21,
    (POWER(ABS(RM + 0.75), 1.25)) AS MV22,
	(POWER(ABS(RM + 0.5), 1.75)) AS MV23,
    (POWER(ABS(RM + 0.5), 1.25)) AS MV24,
    (POWER(ABS(RM + 1), 2.0)) AS MV25,
    (POWER(ABS(RM + 1), 1.75)) AS MV26,
	(POWER(ABS(RM + 0.75), 2.0)) AS MV27,
	(POWER(ABS(RM + 0.75), 1.75)) AS MV28,
    (POWER(ABS(RM + 0.5), 1.15)) AS MV29,
    (POWER(ABS(RM + 0.75), 1.15)) AS MV30,
	(POWER(ABS(RM + 1), 1.15)) AS MV31,
	(POWER(ABS(RM + 1.25), 1.15)) AS MV32,
	((-0.119048*POWER(OM, 2)) + (-0.0714286 * OM) + 5.47619) AS MV33,
	((-0.0227273*POWER(OM, 4)) + (0.328283*POWER(OM, 3)) + (-1.62879*POWER(OM, 2)) + (2.18903 * OM) + 5.02597) AS MV34,
	((0.0555556*POWER(OM, 3)) + (-0.559524*POWER(OM, 2)) + (0.0861111 * OM) + 4.19048) AS MV35,
	((-0.0378788*POWER(OM, 4)) + (0.510101*POWER(OM, 3)) + (-2.24242*POWER(OM, 2)) + (2.7767 * OM) + 3.99567) AS MV36,
	((0.111111*POWER(OM, 3)) + (-1.11905*POWER(OM, 2)) + (2.00794 * OM) + 5.52381) AS MV37,
	((-0.0757576*POWER(OM, 4)) + (1.0202*POWER(OM, 3)) + (-4.48485*POWER(OM, 2)) + (5.83911 * OM) + 5.1342) AS MV38,
	((-0.0530303*POWER(OM, 4)) + (0.691919*POWER(OM, 3)) + (-2.85606*POWER(OM, 2)) + (2.65007 * OM) + 7.10823) AS MV39,
	((0.0555556*POWER(OM, 3)) + (-0.559524*POWER(OM, 2)) + (0.503968 * OM) + 6.2619) AS MV40,
	((-0.0378788*POWER(OM, 4)) + (0.510101*POWER(OM, 3)) + (-2.24242*POWER(OM, 2)) + (2.41955 * OM) + 6.0671) AS MV41,
	((-0.0595238*POWER(OM, 2)) + (-0.535714 * OM) + 6.2381) AS MV42,
    ((0.0277778*POWER(OM, 3)) + (-0.309524*POWER(OM, 2)) + (0.0198413 * OM) + 6.07143) AS MV43,
	((-0.0113636*POWER(OM, 4)) + (0.164141*POWER(OM, 3)) + (-0.814394*POWER(OM, 2)) + (0.594517 * OM) + 6.01299) AS MV44,
	((-0.159091*POWER(OM, 4)) + (2.65152*POWER(OM, 3)) + (-14.1136*POWER(OM, 2)) + (19.7121 * OM) + 25.6364) AS MV45,
	((-0.0397727*POWER(OM, 4)) + (0.592172*POWER(OM, 3)) + (-2.78598*POWER(OM, 2)) + (3.20978 * OM) + 6.23485) AS MV46,
	((0.040056*POWER(OM, 2)) + (-1.44905 * OM) + 8.18667) AS MV47,
	((-0.023172*POWER(OM, 4)) + (0.338635*POWER(OM, 3)) + (-1.522*POWER(OM, 2)) + (0.901504 * OM) + 7.62107) AS MV48,
	((-0.0535714*POWER(OM, 2)) + (-0.279762 * OM) + 4.54167) AS MV49,
    ((0.0227273*POWER(OM, 3)) + (-0.292208*POWER(OM, 2)) + (0.345238 * OM) + 4.30303) AS MV50,
	((-0.0217803*POWER(OM, 4)) + (0.327652*POWER(OM, 3)) + (-1.61458*POWER(OM, 2)) + (2.13122 * OM) + 4.04167) AS MV51,
	((-0.0327381*POWER(OM, 2)) + (-0.467262 * OM) + 4.89583) AS MV52,
	((-0.0184659*POWER(OM, 4)) + (0.272412*POWER(OM, 3)) + (-1.29972*POWER(OM, 2)) + (1.42889 * OM) + 4.52841) AS MV53
FROM
(
    SELECT DISTINCT [Year]
    FROM [HINDCAST].[DAT_Model]
) m
CROSS APPLY
(
    SELECT
        *
    FROM [HINDCAST].[VIEW_HistoricMatch]
    WHERE [Year]=m.[Year]
) h
CROSS APPLY
(
    SELECT
        DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]) AS START_FROM,
        [Value] AS AVG_VALUE,
        DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE) AS OM,
        (@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)) AS RM,
        [Value]
    FROM [HINDCAST].[VIEW_HistoricMatch]
    WHERE
        [FAKE_DATE] >= DATEADD(MM, @OffsetMonths, h.[FAKE_DATE])
        -- not <= because that would be @NumberMonths + 1 months
        AND [FAKE_DATE] < DATEADD(MM, @NumberMonths, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]))
) s
WHERE MONTH(FAKE_DATE)=MONTH(GETDATE())



SELECT
	[Year],
	[NumberMonths],
	[START_FROM],
	AVG(AVG_VALUE) AS OLD_WEIGHT,
	[HINDCAST].[FCT_GradeHistoric](AVG(AVG_VALUE)) AS GRADE,
    SUM([Value] * MV) / SUM(MV) AS NW,
    SUM([Value] * MV2) / SUM(MV2) AS NW2,
    SUM([Value] * MV3) / SUM(MV3) AS NW3,
    SUM([Value] * MV4) / SUM(MV4) AS NW4,
    SUM([Value] * MV5) / SUM(MV5) AS NW5,
    SUM([Value] * MV6) / SUM(MV6) AS NW6,
    SUM([Value] * MV7) / SUM(MV7) AS NW7,
    SUM([Value] * MV8) / SUM(MV8) AS NW8,
    SUM([Value] * MV9) / SUM(MV9) AS NW9,
    SUM([Value] * MV10) / SUM(MV10) AS NW10,
    SUM([Value] * MV11) / SUM(MV11) AS NW11,
    SUM([Value] * MV12) / SUM(MV12) AS NW12,
    SUM([Value] * MV13) / SUM(MV13) AS NW13,
    SUM([Value] * MV14) / SUM(MV14) AS NW14,
    SUM([Value] * MV15) / SUM(MV15) AS NW15,
    SUM([Value] * MV16) / SUM(MV16) AS NW16,
    SUM([Value] * MV17) / SUM(MV17) AS NW17,
    SUM([Value] * MV18) / SUM(MV18) AS NW18,
    SUM([Value] * MV19) / SUM(MV19) AS NW19,
    SUM([Value] * MV20) / SUM(MV20) AS NW20,
    SUM([Value] * MV21) / SUM(MV21) AS NW21,
    SUM([Value] * MV22) / SUM(MV22) AS NW22,
    SUM([Value] * MV23) / SUM(MV23) AS NW23,
    SUM([Value] * MV24) / SUM(MV24) AS NW24,
    SUM([Value] * MV25) / SUM(MV25) AS NW25,
    SUM([Value] * MV26) / SUM(MV26) AS NW26,
    SUM([Value] * MV27) / SUM(MV27) AS NW27,
    SUM([Value] * MV28) / SUM(MV28) AS NW28,
    SUM([Value] * MV29) / SUM(MV29) AS NW29,
    SUM([Value] * MV30) / SUM(MV30) AS NW30,
    SUM([Value] * MV31) / SUM(MV31) AS NW31,
    SUM([Value] * MV32) / SUM(MV32) AS NW32,
    SUM([Value] * MV33) / SUM(MV33) AS NW33,
    SUM([Value] * MV34) / SUM(MV34) AS NW34,
    SUM([Value] * MV35) / SUM(MV35) AS NW35,
    SUM([Value] * MV36) / SUM(MV36) AS NW36,
    SUM([Value] * MV37) / SUM(MV37) AS NW37,
    SUM([Value] * MV38) / SUM(MV38) AS NW38,
    SUM([Value] * MV39) / SUM(MV39) AS NW39,
    SUM([Value] * MV40) / SUM(MV40) AS NW40,
    SUM([Value] * MV41) / SUM(MV41) AS NW41,
    SUM([Value] * MV42) / SUM(MV42) AS NW42,
    SUM([Value] * MV43) / SUM(MV43) AS NW43,
    SUM([Value] * MV44) / SUM(MV44) AS NW44,
    SUM([Value] * MV45) / SUM(MV45) AS NW45,
    SUM([Value] * MV46) / SUM(MV46) AS NW46,
    SUM([Value] * MV47) / SUM(MV47) AS NW47,
    SUM([Value] * MV48) / SUM(MV48) AS NW48,
    SUM([Value] * MV49) / SUM(MV49) AS NW49,
    SUM([Value] * MV50) / SUM(MV50) AS NW50,
    SUM([Value] * MV51) / SUM(MV51) AS NW51,
    SUM([Value] * MV52) / SUM(MV52) AS NW52,
    SUM([Value] * MV53) / SUM(MV53) AS NW53,
    SUM([Value] * MV54) / SUM(MV54) AS NW54,
    SUM([Value] * MV55) / SUM(MV55) AS NW55,
    SUM([Value] * MV56) / SUM(MV56) AS NW56,
    SUM([Value] * MV57) / SUM(MV57) AS NW57,
    SUM([Value] * MV58) / SUM(MV58) AS NW58,
    SUM([Value] * MV59) / SUM(MV59) AS NW59,
    SUM([Value] * MV60) / SUM(MV60) AS NW60,
    SUM([Value] * MV61) / SUM(MV61) AS NW61,
    SUM([Value] * MV62) / SUM(MV62) AS NW62,
    SUM([Value] * MV63) / SUM(MV63) AS NW63,
    SUM([Value] * MV64) / SUM(MV64) AS NW64,
    SUM([Value] * MV65) / SUM(MV65) AS NW65,
	SUM((([Value] - 0.80) / [Value]) * MV) / SUM(MV) AS NG,
    SUM((([Value] - 0.80) / [Value]) * MV2) / SUM(MV2) AS NG2,
    SUM((([Value] - 0.80) / [Value]) * MV3) / SUM(MV3) AS NG3,
    SUM((([Value] - 0.80) / [Value]) * MV4) / SUM(MV4) AS NG4,
    SUM((([Value] - 0.80) / [Value]) * MV5) / SUM(MV5) AS NG5,
    SUM((([Value] - 0.80) / [Value]) * MV6) / SUM(MV6) AS NG6,
    SUM((([Value] - 0.80) / [Value]) * MV7) / SUM(MV7) AS NG7,
    SUM((([Value] - 0.80) / [Value]) * MV8) / SUM(MV8) AS NG8,
    SUM((([Value] - 0.80) / [Value]) * MV9) / SUM(MV9) AS NG9,
    SUM((([Value] - 0.80) / [Value]) * MV10) / SUM(MV10) AS NG10,
    SUM((([Value] - 0.80) / [Value]) * MV11) / SUM(MV11) AS NG11,
    SUM((([Value] - 0.80) / [Value]) * MV12) / SUM(MV12) AS NG12,
    SUM((([Value] - 0.80) / [Value]) * MV13) / SUM(MV13) AS NG13,
    SUM((([Value] - 0.80) / [Value]) * MV14) / SUM(MV14) AS NG14,
    SUM((([Value] - 0.80) / [Value]) * MV15) / SUM(MV15) AS NG15,
    SUM((([Value] - 0.80) / [Value]) * MV16) / SUM(MV16) AS NG16,
    SUM((([Value] - 0.80) / [Value]) * MV17) / SUM(MV17) AS NG17,
    SUM((([Value] - 0.80) / [Value]) * MV18) / SUM(MV18) AS NG18,
    SUM((([Value] - 0.80) / [Value]) * MV19) / SUM(MV19) AS NG19,
    SUM((([Value] - 0.80) / [Value]) * MV20) / SUM(MV20) AS NG20,
    SUM((([Value] - 0.80) / [Value]) * MV21) / SUM(MV21) AS NG21,
    SUM((([Value] - 0.80) / [Value]) * MV22) / SUM(MV22) AS NG22,
    SUM((([Value] - 0.80) / [Value]) * MV23) / SUM(MV23) AS NG23,
    SUM((([Value] - 0.80) / [Value]) * MV24) / SUM(MV24) AS NG24,
    SUM((([Value] - 0.80) / [Value]) * MV25) / SUM(MV25) AS NG25,
    SUM((([Value] - 0.80) / [Value]) * MV26) / SUM(MV26) AS NG26,
    SUM((([Value] - 0.80) / [Value]) * MV27) / SUM(MV27) AS NG27,
    SUM((([Value] - 0.80) / [Value]) * MV28) / SUM(MV28) AS NG28,
    SUM((([Value] - 0.80) / [Value]) * MV29) / SUM(MV29) AS NG29,
    SUM((([Value] - 0.80) / [Value]) * MV30) / SUM(MV30) AS NG30,
    SUM((([Value] - 0.80) / [Value]) * MV31) / SUM(MV31) AS NG31,
    SUM((([Value] - 0.80) / [Value]) * MV32) / SUM(MV32) AS NG32,
    SUM((([Value] - 0.80) / [Value]) * MV33) / SUM(MV33) AS NG33,
    SUM((([Value] - 0.80) / [Value]) * MV34) / SUM(MV34) AS NG34,
    SUM((([Value] - 0.80) / [Value]) * MV35) / SUM(MV35) AS NG35,
    SUM((([Value] - 0.80) / [Value]) * MV36) / SUM(MV36) AS NG36,
    SUM((([Value] - 0.80) / [Value]) * MV37) / SUM(MV37) AS NG37,
    SUM((([Value] - 0.80) / [Value]) * MV38) / SUM(MV38) AS NG38,
    SUM((([Value] - 0.80) / [Value]) * MV39) / SUM(MV39) AS NG39,
    SUM((([Value] - 0.80) / [Value]) * MV40) / SUM(MV40) AS NG40,
    SUM((([Value] - 0.80) / [Value]) * MV41) / SUM(MV41) AS NG41,
    SUM((([Value] - 0.80) / [Value]) * MV42) / SUM(MV42) AS NG42,
    SUM((([Value] - 0.80) / [Value]) * MV43) / SUM(MV43) AS NG43,
    SUM((([Value] - 0.80) / [Value]) * MV44) / SUM(MV44) AS NG44,
    SUM((([Value] - 0.80) / [Value]) * MV45) / SUM(MV45) AS NG45,
    SUM((([Value] - 0.80) / [Value]) * MV46) / SUM(MV46) AS NG46,
    SUM((([Value] - 0.80) / [Value]) * MV47) / SUM(MV47) AS NG47,
    SUM((([Value] - 0.80) / [Value]) * MV48) / SUM(MV48) AS NG48,
    SUM((([Value] - 0.80) / [Value]) * MV49) / SUM(MV49) AS NG49,
    SUM((([Value] - 0.80) / [Value]) * MV50) / SUM(MV50) AS NG50,
    SUM((([Value] - 0.80) / [Value]) * MV51) / SUM(MV51) AS NG51,
    SUM((([Value] - 0.80) / [Value]) * MV52) / SUM(MV52) AS NG52,
    SUM((([Value] - 0.80) / [Value]) * MV53) / SUM(MV53) AS NG53,
    SUM((([Value] - 0.80) / [Value]) * MV54) / SUM(MV54) AS NG54,
    SUM((([Value] - 0.80) / [Value]) * MV55) / SUM(MV55) AS NG55,
    SUM((([Value] - 0.80) / [Value]) * MV56) / SUM(MV56) AS NG56,
    SUM((([Value] - 0.80) / [Value]) * MV57) / SUM(MV57) AS NG57,
    SUM((([Value] - 0.80) / [Value]) * MV58) / SUM(MV58) AS NG58,
    SUM((([Value] - 0.80) / [Value]) * MV59) / SUM(MV59) AS NG59,
    SUM((([Value] - 0.80) / [Value]) * MV60) / SUM(MV60) AS NG60,
    SUM((([Value] - 0.80) / [Value]) * MV61) / SUM(MV61) AS NG61,
    SUM((([Value] - 0.80) / [Value]) * MV62) / SUM(MV62) AS NG62,
    SUM((([Value] - 0.80) / [Value]) * MV63) / SUM(MV63) AS NG63,
    SUM((([Value] - 0.80) / [Value]) * MV64) / SUM(MV64) AS NG64,
    SUM((([Value] - 0.80) / [Value]) * MV65) / SUM(MV65) AS NG65,
    SUM([Grade] * MV) / SUM(MV) AS GR,
    SUM([Grade] * MV2) / SUM(MV2) AS GR2,
    SUM([Grade] * MV3) / SUM(MV3) AS GR3,
    SUM([Grade] * MV4) / SUM(MV4) AS GR4,
    SUM([Grade] * MV5) / SUM(MV5) AS GR5,
    SUM([Grade] * MV6) / SUM(MV6) AS GR6,
    SUM([Grade] * MV7) / SUM(MV7) AS GR7,
    SUM([Grade] * MV8) / SUM(MV8) AS GR8,
    SUM([Grade] * MV9) / SUM(MV9) AS GR9,
    SUM([Grade] * MV10) / SUM(MV10) AS GR10,
    SUM([Grade] * MV11) / SUM(MV11) AS GR11,
    SUM([Grade] * MV12) / SUM(MV12) AS GR12,
    SUM([Grade] * MV13) / SUM(MV13) AS GR13,
    SUM([Grade] * MV14) / SUM(MV14) AS GR14,
    SUM([Grade] * MV15) / SUM(MV15) AS GR15,
    SUM([Grade] * MV16) / SUM(MV16) AS GR16,
    SUM([Grade] * MV17) / SUM(MV17) AS GR17,
    SUM([Grade] * MV18) / SUM(MV18) AS GR18,
    SUM([Grade] * MV19) / SUM(MV19) AS GR19,
    SUM([Grade] * MV20) / SUM(MV20) AS GR20,
    SUM([Grade] * MV21) / SUM(MV21) AS GR21,
    SUM([Grade] * MV22) / SUM(MV22) AS GR22,
    SUM([Grade] * MV23) / SUM(MV23) AS GR23,
    SUM([Grade] * MV24) / SUM(MV24) AS GR24,
    SUM([Grade] * MV25) / SUM(MV25) AS GR25,
    SUM([Grade] * MV26) / SUM(MV26) AS GR26,
    SUM([Grade] * MV27) / SUM(MV27) AS GR27,
    SUM([Grade] * MV28) / SUM(MV28) AS GR28,
    SUM([Grade] * MV29) / SUM(MV29) AS GR29,
    SUM([Grade] * MV30) / SUM(MV30) AS GR30,
    SUM([Grade] * MV31) / SUM(MV31) AS GR31,
    SUM([Grade] * MV32) / SUM(MV32) AS GR32,
    SUM([Grade] * MV33) / SUM(MV33) AS GR33,
    SUM([Grade] * MV34) / SUM(MV34) AS GR34,
    SUM([Grade] * MV35) / SUM(MV35) AS GR35,
    SUM([Grade] * MV36) / SUM(MV36) AS GR36,
    SUM([Grade] * MV37) / SUM(MV37) AS GR37,
    SUM([Grade] * MV38) / SUM(MV38) AS GR38,
    SUM([Grade] * MV39) / SUM(MV39) AS GR39,
    SUM([Grade] * MV40) / SUM(MV40) AS GR40,
    SUM([Grade] * MV41) / SUM(MV41) AS GR41,
    SUM([Grade] * MV42) / SUM(MV42) AS GR42,
    SUM([Grade] * MV43) / SUM(MV43) AS GR43,
    SUM([Grade] * MV44) / SUM(MV44) AS GR44,
    SUM([Grade] * MV45) / SUM(MV45) AS GR45,
    SUM([Grade] * MV46) / SUM(MV46) AS GR46,
    SUM([Grade] * MV47) / SUM(MV47) AS GR47,
    SUM([Grade] * MV48) / SUM(MV48) AS GR48,
    SUM([Grade] * MV49) / SUM(MV49) AS GR49,
    SUM([Grade] * MV50) / SUM(MV50) AS GR50,
    SUM([Grade] * MV51) / SUM(MV51) AS GR51,
    SUM([Grade] * MV52) / SUM(MV52) AS GR52,
    SUM([Grade] * MV53) / SUM(MV53) AS GR53,
    SUM([Grade] * MV54) / SUM(MV54) AS GR54,
    SUM([Grade] * MV55) / SUM(MV55) AS GR55,
    SUM([Grade] * MV56) / SUM(MV56) AS GR56,
    SUM([Grade] * MV57) / SUM(MV57) AS GR57,
    SUM([Grade] * MV58) / SUM(MV58) AS GR58,
    SUM([Grade] * MV59) / SUM(MV59) AS GR59,
    SUM([Grade] * MV60) / SUM(MV60) AS GR60,
    SUM([Grade] * MV61) / SUM(MV61) AS GR61,
    SUM([Grade] * MV62) / SUM(MV62) AS GR62,
    SUM([Grade] * MV63) / SUM(MV63) AS GR63,
    SUM([Grade] * MV64) / SUM(MV64) AS GR64,
    SUM([Grade] * MV65) / SUM(MV65) AS GR65,
    SUM([Grade] * MV66) / SUM(MV66) AS GR66,
    SUM([Grade] * MV67) / SUM(MV67) AS GR67,
    SUM([Grade] * MV68) / SUM(MV68) AS GR68,
    SUM([Grade2] * MV) / SUM(MV) AS G2V,
    SUM([Grade2] * MV2) / SUM(MV2) AS G2V2,
    SUM([Grade2] * MV3) / SUM(MV3) AS G2V3,
    SUM([Grade2] * MV4) / SUM(MV4) AS G2V4,
    SUM([Grade2] * MV5) / SUM(MV5) AS G2V5,
    SUM([Grade2] * MV6) / SUM(MV6) AS G2V6,
    SUM([Grade2] * MV7) / SUM(MV7) AS G2V7,
    SUM([Grade2] * MV8) / SUM(MV8) AS G2V8,
    SUM([Grade2] * MV9) / SUM(MV9) AS G2V9,
    SUM([Grade2] * MV10) / SUM(MV10) AS G2V10,
    SUM([Grade2] * MV11) / SUM(MV11) AS G2V11,
    SUM([Grade2] * MV12) / SUM(MV12) AS G2V12,
    SUM([Grade2] * MV13) / SUM(MV13) AS G2V13,
    SUM([Grade2] * MV14) / SUM(MV14) AS G2V14,
    SUM([Grade2] * MV15) / SUM(MV15) AS G2V15,
    SUM([Grade2] * MV16) / SUM(MV16) AS G2V16,
    SUM([Grade2] * MV17) / SUM(MV17) AS G2V17,
    SUM([Grade2] * MV18) / SUM(MV18) AS G2V18,
    SUM([Grade2] * MV19) / SUM(MV19) AS G2V19,
    SUM([Grade2] * MV20) / SUM(MV20) AS G2V20,
    SUM([Grade2] * MV21) / SUM(MV21) AS G2V21,
    SUM([Grade2] * MV22) / SUM(MV22) AS G2V22,
    SUM([Grade2] * MV23) / SUM(MV23) AS G2V23,
    SUM([Grade2] * MV24) / SUM(MV24) AS G2V24,
    SUM([Grade2] * MV25) / SUM(MV25) AS G2V25,
    SUM([Grade2] * MV26) / SUM(MV26) AS G2V26,
    SUM([Grade2] * MV27) / SUM(MV27) AS G2V27,
    SUM([Grade2] * MV28) / SUM(MV28) AS G2V28,
    SUM([Grade2] * MV29) / SUM(MV29) AS G2V29,
    SUM([Grade2] * MV30) / SUM(MV30) AS G2V30,
    SUM([Grade2] * MV31) / SUM(MV31) AS G2V31,
    SUM([Grade2] * MV32) / SUM(MV32) AS G2V32,
    SUM([Grade2] * MV33) / SUM(MV33) AS G2V33,
    SUM([Grade2] * MV34) / SUM(MV34) AS G2V34,
    SUM([Grade2] * MV35) / SUM(MV35) AS G2V35,
    SUM([Grade2] * MV36) / SUM(MV36) AS G2V36,
    SUM([Grade2] * MV37) / SUM(MV37) AS G2V37,
    SUM([Grade2] * MV38) / SUM(MV38) AS G2V38,
    SUM([Grade2] * MV39) / SUM(MV39) AS G2V39,
    SUM([Grade2] * MV40) / SUM(MV40) AS G2V40,
    SUM([Grade2] * MV41) / SUM(MV41) AS G2V41,
    SUM([Grade2] * MV42) / SUM(MV42) AS G2V42,
    SUM([Grade2] * MV43) / SUM(MV43) AS G2V43,
    SUM([Grade2] * MV44) / SUM(MV44) AS G2V44,
    SUM([Grade2] * MV45) / SUM(MV45) AS G2V45,
    SUM([Grade2] * MV46) / SUM(MV46) AS G2V46,
    SUM([Grade2] * MV47) / SUM(MV47) AS G2V47,
    SUM([Grade2] * MV48) / SUM(MV48) AS G2V48,
    SUM([Grade2] * MV49) / SUM(MV49) AS G2V49,
    SUM([Grade2] * MV50) / SUM(MV50) AS G2V50,
    SUM([Grade2] * MV51) / SUM(MV51) AS G2V51,
    SUM([Grade2] * MV52) / SUM(MV52) AS G2V52,
    SUM([Grade2] * MV53) / SUM(MV53) AS G2V53,
    SUM([Grade2] * MV54) / SUM(MV54) AS G2V54,
    SUM([Grade2] * MV55) / SUM(MV55) AS G2V55,
    SUM([Grade2] * MV56) / SUM(MV56) AS G2V56,
    SUM([Grade2] * MV57) / SUM(MV57) AS G2V57,
    SUM([Grade2] * MV58) / SUM(MV58) AS G2V58,
    SUM([Grade2] * MV59) / SUM(MV59) AS G2V59,
    SUM([Grade2] * MV60) / SUM(MV60) AS G2V60,
    SUM([Grade2] * MV61) / SUM(MV61) AS G2V61,
    SUM([Grade2] * MV62) / SUM(MV62) AS G2V62,
    SUM([Grade2] * MV63) / SUM(MV63) AS G2V63,
    SUM([Grade2] * MV64) / SUM(MV64) AS G2V64,
    SUM([Grade2] * MV65) / SUM(MV65) AS G2V65,
    SUM([Grade2] * MV66) / SUM(MV66) AS G2V66,
    SUM([Grade2] * MV67) / SUM(MV67) AS G2V67,
    SUM([Grade2] * MV68) / SUM(MV68) AS G2V68,
    SUM([Grade3] * MV) / SUM(MV) AS G3V,
    SUM([Grade3] * MV2) / SUM(MV2) AS G3V2,
    SUM([Grade3] * MV3) / SUM(MV3) AS G3V3,
    SUM([Grade3] * MV4) / SUM(MV4) AS G3V4,
    SUM([Grade3] * MV5) / SUM(MV5) AS G3V5,
    SUM([Grade3] * MV6) / SUM(MV6) AS G3V6,
    SUM([Grade3] * MV7) / SUM(MV7) AS G3V7,
    SUM([Grade3] * MV8) / SUM(MV8) AS G3V8,
    SUM([Grade3] * MV9) / SUM(MV9) AS G3V9,
    SUM([Grade3] * MV10) / SUM(MV10) AS G3V10,
    SUM([Grade3] * MV11) / SUM(MV11) AS G3V11,
    SUM([Grade3] * MV12) / SUM(MV12) AS G3V12,
    SUM([Grade3] * MV13) / SUM(MV13) AS G3V13,
    SUM([Grade3] * MV14) / SUM(MV14) AS G3V14,
    SUM([Grade3] * MV15) / SUM(MV15) AS G3V15,
    SUM([Grade3] * MV16) / SUM(MV16) AS G3V16,
    SUM([Grade3] * MV17) / SUM(MV17) AS G3V17,
    SUM([Grade3] * MV18) / SUM(MV18) AS G3V18,
    SUM([Grade3] * MV19) / SUM(MV19) AS G3V19,
    SUM([Grade3] * MV20) / SUM(MV20) AS G3V20,
    SUM([Grade3] * MV21) / SUM(MV21) AS G3V21,
    SUM([Grade3] * MV22) / SUM(MV22) AS G3V22,
    SUM([Grade3] * MV23) / SUM(MV23) AS G3V23,
    SUM([Grade3] * MV24) / SUM(MV24) AS G3V24,
    SUM([Grade3] * MV25) / SUM(MV25) AS G3V25,
    SUM([Grade3] * MV26) / SUM(MV26) AS G3V26,
    SUM([Grade3] * MV27) / SUM(MV27) AS G3V27,
    SUM([Grade3] * MV28) / SUM(MV28) AS G3V28,
    SUM([Grade3] * MV29) / SUM(MV29) AS G3V29,
    SUM([Grade3] * MV30) / SUM(MV30) AS G3V30,
    SUM([Grade3] * MV31) / SUM(MV31) AS G3V31,
    SUM([Grade3] * MV32) / SUM(MV32) AS G3V32,
    SUM([Grade3] * MV33) / SUM(MV33) AS G3V33,
    SUM([Grade3] * MV34) / SUM(MV34) AS G3V34,
    SUM([Grade3] * MV35) / SUM(MV35) AS G3V35,
    SUM([Grade3] * MV36) / SUM(MV36) AS G3V36,
    SUM([Grade3] * MV37) / SUM(MV37) AS G3V37,
    SUM([Grade3] * MV38) / SUM(MV38) AS G3V38,
    SUM([Grade3] * MV39) / SUM(MV39) AS G3V39,
    SUM([Grade3] * MV40) / SUM(MV40) AS G3V40,
    SUM([Grade3] * MV41) / SUM(MV41) AS G3V41,
    SUM([Grade3] * MV42) / SUM(MV42) AS G3V42,
    SUM([Grade3] * MV43) / SUM(MV43) AS G3V43,
    SUM([Grade3] * MV44) / SUM(MV44) AS G3V44,
    SUM([Grade3] * MV45) / SUM(MV45) AS G3V45,
    SUM([Grade3] * MV46) / SUM(MV46) AS G3V46,
    SUM([Grade3] * MV47) / SUM(MV47) AS G3V47,
    SUM([Grade3] * MV48) / SUM(MV48) AS G3V48,
    SUM([Grade3] * MV49) / SUM(MV49) AS G3V49,
    SUM([Grade3] * MV50) / SUM(MV50) AS G3V50,
    SUM([Grade3] * MV51) / SUM(MV51) AS G3V51,
    SUM([Grade3] * MV52) / SUM(MV52) AS G3V52,
    SUM([Grade3] * MV53) / SUM(MV53) AS G3V53,
    SUM([Grade3] * MV54) / SUM(MV54) AS G3V54,
    SUM([Grade3] * MV55) / SUM(MV55) AS G3V55,
    SUM([Grade3] * MV56) / SUM(MV56) AS G3V56,
    SUM([Grade3] * MV57) / SUM(MV57) AS G3V57,
    SUM([Grade3] * MV58) / SUM(MV58) AS G3V58,
    SUM([Grade3] * MV59) / SUM(MV59) AS G3V59,
    SUM([Grade3] * MV60) / SUM(MV60) AS G3V60,
    SUM([Grade3] * MV61) / SUM(MV61) AS G3V61,
    SUM([Grade3] * MV62) / SUM(MV62) AS G3V62,
    SUM([Grade3] * MV63) / SUM(MV63) AS G3V63,
    SUM([Grade3] * MV64) / SUM(MV64) AS G3V64,
    SUM([Grade3] * MV65) / SUM(MV65) AS G3V65,
    SUM([Grade3] * MV66) / SUM(MV66) AS G3V66,
    SUM([Grade3] * MV67) / SUM(MV67) AS G3V67,
    SUM([Grade3] * MV68) / SUM(MV68) AS G3V68,
    SUM([Grade4] * MV) / SUM(MV) AS G4V,
    SUM([Grade4] * MV2) / SUM(MV2) AS G4V2,
    SUM([Grade4] * MV3) / SUM(MV3) AS G4V3,
    SUM([Grade4] * MV4) / SUM(MV4) AS G4V4,
    SUM([Grade4] * MV5) / SUM(MV5) AS G4V5,
    SUM([Grade4] * MV6) / SUM(MV6) AS G4V6,
    SUM([Grade4] * MV7) / SUM(MV7) AS G4V7,
    SUM([Grade4] * MV8) / SUM(MV8) AS G4V8,
    SUM([Grade4] * MV9) / SUM(MV9) AS G4V9,
    SUM([Grade4] * MV10) / SUM(MV10) AS G4V10,
    SUM([Grade4] * MV11) / SUM(MV11) AS G4V11,
    SUM([Grade4] * MV12) / SUM(MV12) AS G4V12,
    SUM([Grade4] * MV13) / SUM(MV13) AS G4V13,
    SUM([Grade4] * MV14) / SUM(MV14) AS G4V14,
    SUM([Grade4] * MV15) / SUM(MV15) AS G4V15,
    SUM([Grade4] * MV16) / SUM(MV16) AS G4V16,
    SUM([Grade4] * MV17) / SUM(MV17) AS G4V17,
    SUM([Grade4] * MV18) / SUM(MV18) AS G4V18,
    SUM([Grade4] * MV19) / SUM(MV19) AS G4V19,
    SUM([Grade4] * MV20) / SUM(MV20) AS G4V20,
    SUM([Grade4] * MV21) / SUM(MV21) AS G4V21,
    SUM([Grade4] * MV22) / SUM(MV22) AS G4V22,
    SUM([Grade4] * MV23) / SUM(MV23) AS G4V23,
    SUM([Grade4] * MV24) / SUM(MV24) AS G4V24,
    SUM([Grade4] * MV25) / SUM(MV25) AS G4V25,
    SUM([Grade4] * MV26) / SUM(MV26) AS G4V26,
    SUM([Grade4] * MV27) / SUM(MV27) AS G4V27,
    SUM([Grade4] * MV28) / SUM(MV28) AS G4V28,
    SUM([Grade4] * MV29) / SUM(MV29) AS G4V29,
    SUM([Grade4] * MV30) / SUM(MV30) AS G4V30,
    SUM([Grade4] * MV31) / SUM(MV31) AS G4V31,
    SUM([Grade4] * MV32) / SUM(MV32) AS G4V32,
    SUM([Grade4] * MV33) / SUM(MV33) AS G4V33,
    SUM([Grade4] * MV34) / SUM(MV34) AS G4V34,
    SUM([Grade4] * MV35) / SUM(MV35) AS G4V35,
    SUM([Grade4] * MV36) / SUM(MV36) AS G4V36,
    SUM([Grade4] * MV37) / SUM(MV37) AS G4V37,
    SUM([Grade4] * MV38) / SUM(MV38) AS G4V38,
    SUM([Grade4] * MV39) / SUM(MV39) AS G4V39,
    SUM([Grade4] * MV40) / SUM(MV40) AS G4V40,
    SUM([Grade4] * MV41) / SUM(MV41) AS G4V41,
    SUM([Grade4] * MV42) / SUM(MV42) AS G4V42,
    SUM([Grade4] * MV43) / SUM(MV43) AS G4V43,
    SUM([Grade4] * MV44) / SUM(MV44) AS G4V44,
    SUM([Grade4] * MV45) / SUM(MV45) AS G4V45,
    SUM([Grade4] * MV46) / SUM(MV46) AS G4V46,
    SUM([Grade4] * MV47) / SUM(MV47) AS G4V47,
    SUM([Grade4] * MV48) / SUM(MV48) AS G4V48,
    SUM([Grade4] * MV49) / SUM(MV49) AS G4V49,
    SUM([Grade4] * MV50) / SUM(MV50) AS G4V50,
    SUM([Grade4] * MV51) / SUM(MV51) AS G4V51,
    SUM([Grade4] * MV52) / SUM(MV52) AS G4V52,
    SUM([Grade4] * MV53) / SUM(MV53) AS G4V53,
    SUM([Grade4] * MV54) / SUM(MV54) AS G4V54,
    SUM([Grade4] * MV55) / SUM(MV55) AS G4V55,
    SUM([Grade4] * MV56) / SUM(MV56) AS G4V56,
    SUM([Grade4] * MV57) / SUM(MV57) AS G4V57,
    SUM([Grade4] * MV58) / SUM(MV58) AS G4V58,
    SUM([Grade4] * MV59) / SUM(MV59) AS G4V59,
    SUM([Grade4] * MV60) / SUM(MV60) AS G4V60,
    SUM([Grade4] * MV61) / SUM(MV61) AS G4V61,
    SUM([Grade4] * MV62) / SUM(MV62) AS G4V62,
    SUM([Grade4] * MV63) / SUM(MV63) AS G4V63,
    SUM([Grade4] * MV64) / SUM(MV64) AS G4V64,
    SUM([Grade4] * MV65) / SUM(MV65) AS G4V65,
    SUM([Grade4] * MV66) / SUM(MV66) AS G4V66,
    SUM([Grade4] * MV67) / SUM(MV67) AS G4V67,
    SUM([Grade4] * MV68) / SUM(MV68) AS G4V68,
    SUM([Grade5] * MV) / SUM(MV) AS G5V,
    SUM([Grade5] * MV2) / SUM(MV2) AS G5V2,
    SUM([Grade5] * MV3) / SUM(MV3) AS G5V3,
    SUM([Grade5] * MV4) / SUM(MV4) AS G5V4,
    SUM([Grade5] * MV5) / SUM(MV5) AS G5V5,
    SUM([Grade5] * MV6) / SUM(MV6) AS G5V6,
    SUM([Grade5] * MV7) / SUM(MV7) AS G5V7,
    SUM([Grade5] * MV8) / SUM(MV8) AS G5V8,
    SUM([Grade5] * MV9) / SUM(MV9) AS G5V9,
    SUM([Grade5] * MV10) / SUM(MV10) AS G5V10,
    SUM([Grade5] * MV11) / SUM(MV11) AS G5V11,
    SUM([Grade5] * MV12) / SUM(MV12) AS G5V12,
    SUM([Grade5] * MV13) / SUM(MV13) AS G5V13,
    SUM([Grade5] * MV14) / SUM(MV14) AS G5V14,
    SUM([Grade5] * MV15) / SUM(MV15) AS G5V15,
    SUM([Grade5] * MV16) / SUM(MV16) AS G5V16,
    SUM([Grade5] * MV17) / SUM(MV17) AS G5V17,
    SUM([Grade5] * MV18) / SUM(MV18) AS G5V18,
    SUM([Grade5] * MV19) / SUM(MV19) AS G5V19,
    SUM([Grade5] * MV20) / SUM(MV20) AS G5V20,
    SUM([Grade5] * MV21) / SUM(MV21) AS G5V21,
    SUM([Grade5] * MV22) / SUM(MV22) AS G5V22,
    SUM([Grade5] * MV23) / SUM(MV23) AS G5V23,
    SUM([Grade5] * MV24) / SUM(MV24) AS G5V24,
    SUM([Grade5] * MV25) / SUM(MV25) AS G5V25,
    SUM([Grade5] * MV26) / SUM(MV26) AS G5V26,
    SUM([Grade5] * MV27) / SUM(MV27) AS G5V27,
    SUM([Grade5] * MV28) / SUM(MV28) AS G5V28,
    SUM([Grade5] * MV29) / SUM(MV29) AS G5V29,
    SUM([Grade5] * MV30) / SUM(MV30) AS G5V30,
    SUM([Grade5] * MV31) / SUM(MV31) AS G5V31,
    SUM([Grade5] * MV32) / SUM(MV32) AS G5V32,
    SUM([Grade5] * MV33) / SUM(MV33) AS G5V33,
    SUM([Grade5] * MV34) / SUM(MV34) AS G5V34,
    SUM([Grade5] * MV35) / SUM(MV35) AS G5V35,
    SUM([Grade5] * MV36) / SUM(MV36) AS G5V36,
    SUM([Grade5] * MV37) / SUM(MV37) AS G5V37,
    SUM([Grade5] * MV38) / SUM(MV38) AS G5V38,
    SUM([Grade5] * MV39) / SUM(MV39) AS G5V39,
    SUM([Grade5] * MV40) / SUM(MV40) AS G5V40,
    SUM([Grade5] * MV41) / SUM(MV41) AS G5V41,
    SUM([Grade5] * MV42) / SUM(MV42) AS G5V42,
    SUM([Grade5] * MV43) / SUM(MV43) AS G5V43,
    SUM([Grade5] * MV44) / SUM(MV44) AS G5V44,
    SUM([Grade5] * MV45) / SUM(MV45) AS G5V45,
    SUM([Grade5] * MV46) / SUM(MV46) AS G5V46,
    SUM([Grade5] * MV47) / SUM(MV47) AS G5V47,
    SUM([Grade5] * MV48) / SUM(MV48) AS G5V48,
    SUM([Grade5] * MV49) / SUM(MV49) AS G5V49,
    SUM([Grade5] * MV50) / SUM(MV50) AS G5V50,
    SUM([Grade5] * MV51) / SUM(MV51) AS G5V51,
    SUM([Grade5] * MV52) / SUM(MV52) AS G5V52,
    SUM([Grade5] * MV53) / SUM(MV53) AS G5V53,
    SUM([Grade5] * MV54) / SUM(MV54) AS G5V54,
    SUM([Grade5] * MV55) / SUM(MV55) AS G5V55,
    SUM([Grade5] * MV56) / SUM(MV56) AS G5V56,
    SUM([Grade5] * MV57) / SUM(MV57) AS G5V57,
    SUM([Grade5] * MV58) / SUM(MV58) AS G5V58,
    SUM([Grade5] * MV59) / SUM(MV59) AS G5V59,
    SUM([Grade5] * MV60) / SUM(MV60) AS G5V60,
    SUM([Grade5] * MV61) / SUM(MV61) AS G5V61,
    SUM([Grade5] * MV62) / SUM(MV62) AS G5V62,
    SUM([Grade5] * MV63) / SUM(MV63) AS G5V63,
    SUM([Grade5] * MV64) / SUM(MV64) AS G5V64,
    SUM([Grade5] * MV65) / SUM(MV65) AS G5V65,
    SUM([Grade5] * MV66) / SUM(MV66) AS G5V66,
    SUM([Grade5] * MV67) / SUM(MV67) AS G5V67,
    SUM([Grade5] * MV68) / SUM(MV68) AS G5V68,
    SUM([Grade6] * MV) / SUM(MV) AS G6V,
    SUM([Grade6] * MV2) / SUM(MV2) AS G6V2,
    SUM([Grade6] * MV3) / SUM(MV3) AS G6V3,
    SUM([Grade6] * MV4) / SUM(MV4) AS G6V4,
    SUM([Grade6] * MV5) / SUM(MV5) AS G6V5,
    SUM([Grade6] * MV6) / SUM(MV6) AS G6V6,
    SUM([Grade6] * MV7) / SUM(MV7) AS G6V7,
    SUM([Grade6] * MV8) / SUM(MV8) AS G6V8,
    SUM([Grade6] * MV9) / SUM(MV9) AS G6V9,
    SUM([Grade6] * MV10) / SUM(MV10) AS G6V10,
    SUM([Grade6] * MV11) / SUM(MV11) AS G6V11,
    SUM([Grade6] * MV12) / SUM(MV12) AS G6V12,
    SUM([Grade6] * MV13) / SUM(MV13) AS G6V13,
    SUM([Grade6] * MV14) / SUM(MV14) AS G6V14,
    SUM([Grade6] * MV15) / SUM(MV15) AS G6V15,
    SUM([Grade6] * MV16) / SUM(MV16) AS G6V16,
    SUM([Grade6] * MV17) / SUM(MV17) AS G6V17,
    SUM([Grade6] * MV18) / SUM(MV18) AS G6V18,
    SUM([Grade6] * MV19) / SUM(MV19) AS G6V19,
    SUM([Grade6] * MV20) / SUM(MV20) AS G6V20,
    SUM([Grade6] * MV21) / SUM(MV21) AS G6V21,
    SUM([Grade6] * MV22) / SUM(MV22) AS G6V22,
    SUM([Grade6] * MV23) / SUM(MV23) AS G6V23,
    SUM([Grade6] * MV24) / SUM(MV24) AS G6V24,
    SUM([Grade6] * MV25) / SUM(MV25) AS G6V25,
    SUM([Grade6] * MV26) / SUM(MV26) AS G6V26,
    SUM([Grade6] * MV27) / SUM(MV27) AS G6V27,
    SUM([Grade6] * MV28) / SUM(MV28) AS G6V28,
    SUM([Grade6] * MV29) / SUM(MV29) AS G6V29,
    SUM([Grade6] * MV30) / SUM(MV30) AS G6V30,
    SUM([Grade6] * MV31) / SUM(MV31) AS G6V31,
    SUM([Grade6] * MV32) / SUM(MV32) AS G6V32,
    SUM([Grade6] * MV33) / SUM(MV33) AS G6V33,
    SUM([Grade6] * MV34) / SUM(MV34) AS G6V34,
    SUM([Grade6] * MV35) / SUM(MV35) AS G6V35,
    SUM([Grade6] * MV36) / SUM(MV36) AS G6V36,
    SUM([Grade6] * MV37) / SUM(MV37) AS G6V37,
    SUM([Grade6] * MV38) / SUM(MV38) AS G6V38,
    SUM([Grade6] * MV39) / SUM(MV39) AS G6V39,
    SUM([Grade6] * MV40) / SUM(MV40) AS G6V40,
    SUM([Grade6] * MV41) / SUM(MV41) AS G6V41,
    SUM([Grade6] * MV42) / SUM(MV42) AS G6V42,
    SUM([Grade6] * MV43) / SUM(MV43) AS G6V43,
    SUM([Grade6] * MV44) / SUM(MV44) AS G6V44,
    SUM([Grade6] * MV45) / SUM(MV45) AS G6V45,
    SUM([Grade6] * MV46) / SUM(MV46) AS G6V46,
    SUM([Grade6] * MV47) / SUM(MV47) AS G6V47,
    SUM([Grade6] * MV48) / SUM(MV48) AS G6V48,
    SUM([Grade6] * MV49) / SUM(MV49) AS G6V49,
    SUM([Grade6] * MV50) / SUM(MV50) AS G6V50,
    SUM([Grade6] * MV51) / SUM(MV51) AS G6V51,
    SUM([Grade6] * MV52) / SUM(MV52) AS G6V52,
    SUM([Grade6] * MV53) / SUM(MV53) AS G6V53,
    SUM([Grade6] * MV54) / SUM(MV54) AS G6V54,
    SUM([Grade6] * MV55) / SUM(MV55) AS G6V55,
    SUM([Grade6] * MV56) / SUM(MV56) AS G6V56,
    SUM([Grade6] * MV57) / SUM(MV57) AS G6V57,
    SUM([Grade6] * MV58) / SUM(MV58) AS G6V58,
    SUM([Grade6] * MV59) / SUM(MV59) AS G6V59,
    SUM([Grade6] * MV60) / SUM(MV60) AS G6V60,
    SUM([Grade6] * MV61) / SUM(MV61) AS G6V61,
    SUM([Grade6] * MV62) / SUM(MV62) AS G6V62,
    SUM([Grade6] * MV63) / SUM(MV63) AS G6V63,
    SUM([Grade6] * MV64) / SUM(MV64) AS G6V64,
    SUM([Grade6] * MV65) / SUM(MV65) AS G6V65,
    SUM([Grade6] * MV66) / SUM(MV66) AS G6V66,
    SUM([Grade6] * MV67) / SUM(MV67) AS G6V67,
    SUM([Grade6] * MV68) / SUM(MV68) AS G6V68,
    SUM([Grade7] * MV) / SUM(MV) AS G7V,
    SUM([Grade7] * MV2) / SUM(MV2) AS G7V2,
    SUM([Grade7] * MV3) / SUM(MV3) AS G7V3,
    SUM([Grade7] * MV4) / SUM(MV4) AS G7V4,
    SUM([Grade7] * MV5) / SUM(MV5) AS G7V5,
    SUM([Grade7] * MV6) / SUM(MV6) AS G7V6,
    SUM([Grade7] * MV7) / SUM(MV7) AS G7V7,
    SUM([Grade7] * MV8) / SUM(MV8) AS G7V8,
    SUM([Grade7] * MV9) / SUM(MV9) AS G7V9,
    SUM([Grade7] * MV10) / SUM(MV10) AS G7V10,
    SUM([Grade7] * MV11) / SUM(MV11) AS G7V11,
    SUM([Grade7] * MV12) / SUM(MV12) AS G7V12,
    SUM([Grade7] * MV13) / SUM(MV13) AS G7V13,
    SUM([Grade7] * MV14) / SUM(MV14) AS G7V14,
    SUM([Grade7] * MV15) / SUM(MV15) AS G7V15,
    SUM([Grade7] * MV16) / SUM(MV16) AS G7V16,
    SUM([Grade7] * MV17) / SUM(MV17) AS G7V17,
    SUM([Grade7] * MV18) / SUM(MV18) AS G7V18,
    SUM([Grade7] * MV19) / SUM(MV19) AS G7V19,
    SUM([Grade7] * MV20) / SUM(MV20) AS G7V20,
    SUM([Grade7] * MV21) / SUM(MV21) AS G7V21,
    SUM([Grade7] * MV22) / SUM(MV22) AS G7V22,
    SUM([Grade7] * MV23) / SUM(MV23) AS G7V23,
    SUM([Grade7] * MV24) / SUM(MV24) AS G7V24,
    SUM([Grade7] * MV25) / SUM(MV25) AS G7V25,
    SUM([Grade7] * MV26) / SUM(MV26) AS G7V26,
    SUM([Grade7] * MV27) / SUM(MV27) AS G7V27,
    SUM([Grade7] * MV28) / SUM(MV28) AS G7V28,
    SUM([Grade7] * MV29) / SUM(MV29) AS G7V29,
    SUM([Grade7] * MV30) / SUM(MV30) AS G7V30,
    SUM([Grade7] * MV31) / SUM(MV31) AS G7V31,
    SUM([Grade7] * MV32) / SUM(MV32) AS G7V32,
    SUM([Grade7] * MV33) / SUM(MV33) AS G7V33,
    SUM([Grade7] * MV34) / SUM(MV34) AS G7V34,
    SUM([Grade7] * MV35) / SUM(MV35) AS G7V35,
    SUM([Grade7] * MV36) / SUM(MV36) AS G7V36,
    SUM([Grade7] * MV37) / SUM(MV37) AS G7V37,
    SUM([Grade7] * MV38) / SUM(MV38) AS G7V38,
    SUM([Grade7] * MV39) / SUM(MV39) AS G7V39,
    SUM([Grade7] * MV40) / SUM(MV40) AS G7V40,
    SUM([Grade7] * MV41) / SUM(MV41) AS G7V41,
    SUM([Grade7] * MV42) / SUM(MV42) AS G7V42,
    SUM([Grade7] * MV43) / SUM(MV43) AS G7V43,
    SUM([Grade7] * MV44) / SUM(MV44) AS G7V44,
    SUM([Grade7] * MV45) / SUM(MV45) AS G7V45,
    SUM([Grade7] * MV46) / SUM(MV46) AS G7V46,
    SUM([Grade7] * MV47) / SUM(MV47) AS G7V47,
    SUM([Grade7] * MV48) / SUM(MV48) AS G7V48,
    SUM([Grade7] * MV49) / SUM(MV49) AS G7V49,
    SUM([Grade7] * MV50) / SUM(MV50) AS G7V50,
    SUM([Grade7] * MV51) / SUM(MV51) AS G7V51,
    SUM([Grade7] * MV52) / SUM(MV52) AS G7V52,
    SUM([Grade7] * MV53) / SUM(MV53) AS G7V53,
    SUM([Grade7] * MV54) / SUM(MV54) AS G7V54,
    SUM([Grade7] * MV55) / SUM(MV55) AS G7V55,
    SUM([Grade7] * MV56) / SUM(MV56) AS G7V56,
    SUM([Grade7] * MV57) / SUM(MV57) AS G7V57,
    SUM([Grade7] * MV58) / SUM(MV58) AS G7V58,
    SUM([Grade7] * MV59) / SUM(MV59) AS G7V59,
    SUM([Grade7] * MV60) / SUM(MV60) AS G7V60,
    SUM([Grade7] * MV61) / SUM(MV61) AS G7V61,
    SUM([Grade7] * MV62) / SUM(MV62) AS G7V62,
    SUM([Grade7] * MV63) / SUM(MV63) AS G7V63,
    SUM([Grade7] * MV64) / SUM(MV64) AS G7V64,
    SUM([Grade7] * MV65) / SUM(MV65) AS G7V65,
    SUM([Grade7] * MV66) / SUM(MV66) AS G7V66,
    SUM([Grade7] * MV67) / SUM(MV67) AS G7V67,
    SUM([Grade7] * MV68) / SUM(MV68) AS G7V68,
    SUM([Grade8] * MV) / SUM(MV) AS G8V,
    SUM([Grade8] * MV2) / SUM(MV2) AS G8V2,
    SUM([Grade8] * MV3) / SUM(MV3) AS G8V3,
    SUM([Grade8] * MV4) / SUM(MV4) AS G8V4,
    SUM([Grade8] * MV5) / SUM(MV5) AS G8V5,
    SUM([Grade8] * MV6) / SUM(MV6) AS G8V6,
    SUM([Grade8] * MV7) / SUM(MV7) AS G8V7,
    SUM([Grade8] * MV8) / SUM(MV8) AS G8V8,
    SUM([Grade8] * MV9) / SUM(MV9) AS G8V9,
    SUM([Grade8] * MV10) / SUM(MV10) AS G8V10,
    SUM([Grade8] * MV11) / SUM(MV11) AS G8V11,
    SUM([Grade8] * MV12) / SUM(MV12) AS G8V12,
    SUM([Grade8] * MV13) / SUM(MV13) AS G8V13,
    SUM([Grade8] * MV14) / SUM(MV14) AS G8V14,
    SUM([Grade8] * MV15) / SUM(MV15) AS G8V15,
    SUM([Grade8] * MV16) / SUM(MV16) AS G8V16,
    SUM([Grade8] * MV17) / SUM(MV17) AS G8V17,
    SUM([Grade8] * MV18) / SUM(MV18) AS G8V18,
    SUM([Grade8] * MV19) / SUM(MV19) AS G8V19,
    SUM([Grade8] * MV20) / SUM(MV20) AS G8V20,
    SUM([Grade8] * MV21) / SUM(MV21) AS G8V21,
    SUM([Grade8] * MV22) / SUM(MV22) AS G8V22,
    SUM([Grade8] * MV23) / SUM(MV23) AS G8V23,
    SUM([Grade8] * MV24) / SUM(MV24) AS G8V24,
    SUM([Grade8] * MV25) / SUM(MV25) AS G8V25,
    SUM([Grade8] * MV26) / SUM(MV26) AS G8V26,
    SUM([Grade8] * MV27) / SUM(MV27) AS G8V27,
    SUM([Grade8] * MV28) / SUM(MV28) AS G8V28,
    SUM([Grade8] * MV29) / SUM(MV29) AS G8V29,
    SUM([Grade8] * MV30) / SUM(MV30) AS G8V30,
    SUM([Grade8] * MV31) / SUM(MV31) AS G8V31,
    SUM([Grade8] * MV32) / SUM(MV32) AS G8V32,
    SUM([Grade8] * MV33) / SUM(MV33) AS G8V33,
    SUM([Grade8] * MV34) / SUM(MV34) AS G8V34,
    SUM([Grade8] * MV35) / SUM(MV35) AS G8V35,
    SUM([Grade8] * MV36) / SUM(MV36) AS G8V36,
    SUM([Grade8] * MV37) / SUM(MV37) AS G8V37,
    SUM([Grade8] * MV38) / SUM(MV38) AS G8V38,
    SUM([Grade8] * MV39) / SUM(MV39) AS G8V39,
    SUM([Grade8] * MV40) / SUM(MV40) AS G8V40,
    SUM([Grade8] * MV41) / SUM(MV41) AS G8V41,
    SUM([Grade8] * MV42) / SUM(MV42) AS G8V42,
    SUM([Grade8] * MV43) / SUM(MV43) AS G8V43,
    SUM([Grade8] * MV44) / SUM(MV44) AS G8V44,
    SUM([Grade8] * MV45) / SUM(MV45) AS G8V45,
    SUM([Grade8] * MV46) / SUM(MV46) AS G8V46,
    SUM([Grade8] * MV47) / SUM(MV47) AS G8V47,
    SUM([Grade8] * MV48) / SUM(MV48) AS G8V48,
    SUM([Grade8] * MV49) / SUM(MV49) AS G8V49,
    SUM([Grade8] * MV50) / SUM(MV50) AS G8V50,
    SUM([Grade8] * MV51) / SUM(MV51) AS G8V51,
    SUM([Grade8] * MV52) / SUM(MV52) AS G8V52,
    SUM([Grade8] * MV53) / SUM(MV53) AS G8V53,
    SUM([Grade8] * MV54) / SUM(MV54) AS G8V54,
    SUM([Grade8] * MV55) / SUM(MV55) AS G8V55,
    SUM([Grade8] * MV56) / SUM(MV56) AS G8V56,
    SUM([Grade8] * MV57) / SUM(MV57) AS G8V57,
    SUM([Grade8] * MV58) / SUM(MV58) AS G8V58,
    SUM([Grade8] * MV59) / SUM(MV59) AS G8V59,
    SUM([Grade8] * MV60) / SUM(MV60) AS G8V60,
    SUM([Grade8] * MV61) / SUM(MV61) AS G8V61,
    SUM([Grade8] * MV62) / SUM(MV62) AS G8V62,
    SUM([Grade8] * MV63) / SUM(MV63) AS G8V63,
    SUM([Grade8] * MV64) / SUM(MV64) AS G8V64,
    SUM([Grade8] * MV65) / SUM(MV65) AS G8V65,
    SUM([Grade8] * MV66) / SUM(MV66) AS G8V66,
    SUM([Grade8] * MV67) / SUM(MV67) AS G8V67,
    SUM([Grade8] * MV68) / SUM(MV68) AS G8V68,
    SUM([Grade9] * MV) / SUM(MV) AS G9V,
    SUM([Grade9] * MV2) / SUM(MV2) AS G9V2,
    SUM([Grade9] * MV3) / SUM(MV3) AS G9V3,
    SUM([Grade9] * MV4) / SUM(MV4) AS G9V4,
    SUM([Grade9] * MV5) / SUM(MV5) AS G9V5,
    SUM([Grade9] * MV6) / SUM(MV6) AS G9V6,
    SUM([Grade9] * MV7) / SUM(MV7) AS G9V7,
    SUM([Grade9] * MV8) / SUM(MV8) AS G9V8,
    SUM([Grade9] * MV9) / SUM(MV9) AS G9V9,
    SUM([Grade9] * MV10) / SUM(MV10) AS G9V10,
    SUM([Grade9] * MV11) / SUM(MV11) AS G9V11,
    SUM([Grade9] * MV12) / SUM(MV12) AS G9V12,
    SUM([Grade9] * MV13) / SUM(MV13) AS G9V13,
    SUM([Grade9] * MV14) / SUM(MV14) AS G9V14,
    SUM([Grade9] * MV15) / SUM(MV15) AS G9V15,
    SUM([Grade9] * MV16) / SUM(MV16) AS G9V16,
    SUM([Grade9] * MV17) / SUM(MV17) AS G9V17,
    SUM([Grade9] * MV18) / SUM(MV18) AS G9V18,
    SUM([Grade9] * MV19) / SUM(MV19) AS G9V19,
    SUM([Grade9] * MV20) / SUM(MV20) AS G9V20,
    SUM([Grade9] * MV21) / SUM(MV21) AS G9V21,
    SUM([Grade9] * MV22) / SUM(MV22) AS G9V22,
    SUM([Grade9] * MV23) / SUM(MV23) AS G9V23,
    SUM([Grade9] * MV24) / SUM(MV24) AS G9V24,
    SUM([Grade9] * MV25) / SUM(MV25) AS G9V25,
    SUM([Grade9] * MV26) / SUM(MV26) AS G9V26,
    SUM([Grade9] * MV27) / SUM(MV27) AS G9V27,
    SUM([Grade9] * MV28) / SUM(MV28) AS G9V28,
    SUM([Grade9] * MV29) / SUM(MV29) AS G9V29,
    SUM([Grade9] * MV30) / SUM(MV30) AS G9V30,
    SUM([Grade9] * MV31) / SUM(MV31) AS G9V31,
    SUM([Grade9] * MV32) / SUM(MV32) AS G9V32,
    SUM([Grade9] * MV33) / SUM(MV33) AS G9V33,
    SUM([Grade9] * MV34) / SUM(MV34) AS G9V34,
    SUM([Grade9] * MV35) / SUM(MV35) AS G9V35,
    SUM([Grade9] * MV36) / SUM(MV36) AS G9V36,
    SUM([Grade9] * MV37) / SUM(MV37) AS G9V37,
    SUM([Grade9] * MV38) / SUM(MV38) AS G9V38,
    SUM([Grade9] * MV39) / SUM(MV39) AS G9V39,
    SUM([Grade9] * MV40) / SUM(MV40) AS G9V40,
    SUM([Grade9] * MV41) / SUM(MV41) AS G9V41,
    SUM([Grade9] * MV42) / SUM(MV42) AS G9V42,
    SUM([Grade9] * MV43) / SUM(MV43) AS G9V43,
    SUM([Grade9] * MV44) / SUM(MV44) AS G9V44,
    SUM([Grade9] * MV45) / SUM(MV45) AS G9V45,
    SUM([Grade9] * MV46) / SUM(MV46) AS G9V46,
    SUM([Grade9] * MV47) / SUM(MV47) AS G9V47,
    SUM([Grade9] * MV48) / SUM(MV48) AS G9V48,
    SUM([Grade9] * MV49) / SUM(MV49) AS G9V49,
    SUM([Grade9] * MV50) / SUM(MV50) AS G9V50,
    SUM([Grade9] * MV51) / SUM(MV51) AS G9V51,
    SUM([Grade9] * MV52) / SUM(MV52) AS G9V52,
    SUM([Grade9] * MV53) / SUM(MV53) AS G9V53,
    SUM([Grade9] * MV54) / SUM(MV54) AS G9V54,
    SUM([Grade9] * MV55) / SUM(MV55) AS G9V55,
    SUM([Grade9] * MV56) / SUM(MV56) AS G9V56,
    SUM([Grade9] * MV57) / SUM(MV57) AS G9V57,
    SUM([Grade9] * MV58) / SUM(MV58) AS G9V58,
    SUM([Grade9] * MV59) / SUM(MV59) AS G9V59,
    SUM([Grade9] * MV60) / SUM(MV60) AS G9V60,
    SUM([Grade9] * MV61) / SUM(MV61) AS G9V61,
    SUM([Grade9] * MV62) / SUM(MV62) AS G9V62,
    SUM([Grade9] * MV63) / SUM(MV63) AS G9V63,
    SUM([Grade9] * MV64) / SUM(MV64) AS G9V64,
    SUM([Grade9] * MV65) / SUM(MV65) AS G9V65,
    SUM([Grade9] * MV66) / SUM(MV66) AS G9V66,
    SUM([Grade9] * MV67) / SUM(MV67) AS G9V67,
    SUM([Grade9] * MV68) / SUM(MV68) AS G9V68
FROM
(
SELECT
    h.[Year],
    @NumberMonths AS NumberMonths,
    s.START_FROM,
    s.AVG_VALUE,
    s.OM,
    s.RM,
    s.Value,
    Hindcast.FCT_GradeHistoric(s.Value) as [Grade],
    (127501*POWER(s.Value, 3) - (337471*POWER(s.Value, 2)) + (297584*s.Value) - 87415.3) as [Grade2],
    (122353*POWER(s.Value, 3) - (323298*POWER(s.Value, 2)) + (284615*s.Value) - 83472.4) as [Grade3],
    (17327.5*POWER(s.Value, 3) - (42596.8*POWER(s.Value, 2)) + (34888.9*s.Value) - 9519.03) as [Grade4],
    (14099.3*POWER(s.Value, 3) - (36524.2*POWER(s.Value, 2)) + (31563*s.Value) - 9096.96) as [Grade5],
    (4177.58*POWER(s.Value, 3) - (10029.3*POWER(s.Value, 2)) + (8042.19*s.Value) - 2150.97) as [Grade6],
    (4177.58*POWER(s.Value, 3) - (10029.3*POWER(s.Value, 2)) + (8042.19*s.Value) - 2153.97) as [Grade7],
    (1762.42*POWER(s.Value, 3) - (3896.67*POWER(s.Value, 2)) + (2884.06*s.Value) - 713.549) as [Grade8],
    (1262.63*POWER(s.Value, 3) - (2855.11*POWER(s.Value, 2)) + (2163.74*s.Value) - 549.082) as [Grade9],
    (POWER(RM, @MonthPower)) AS MV,
    (POWER(2, RM)) AS MV2,
    (POWER(@MonthPower, RM)) AS MV3,
    (POWER(RM, 2)) AS MV4,
    (POWER(RM, 1.5)) AS MV5,
    (POWER(RM, 1.25)) AS MV6,
    (POWER(RM, 1.75)) AS MV7,
    ((-3.95*POWER(OM, 2)) + (14.95 * OM) + 25) AS MV8,
    ((0.0555556*POWER(OM, 3)) + (-0.619048*POWER(OM, 2)) + (1.03968 * OM) + 5.14286) AS MV9,
    ((6.0/9*POWER(OM, 3)) + (-6.42857*POWER(OM, 2)) + (10.4762 * OM) + 26.7143) AS MV10,
    ((-0.0757576*POWER(OM, 4)) + (0.92424242*POWER(OM, 3)) + (-3.40152*POWER(OM, 2)) + (2.2105 * OM) + 7.18628) AS MV11,
    ((-0.0757576*POWER(OM, 4)) + (1.22727*POWER(OM, 3)) + (-6.62879*POWER(OM, 2)) + (12.0893 * OM) + 0.574269) AS MV12,
    (POWER(ABS(RM - 0.5), 1.5)) AS MV13,
    (POWER(ABS(RM + 0.5), 1.5)) AS MV14,
    (POWER(ABS(RM + 1.5), 1.5)) AS MV15,
    (POWER(ABS(RM + 1.5), 1.25)) AS MV16,
    (POWER(ABS(RM + 1), 1.5)) AS MV17,
    (POWER(ABS(RM + 1), 1.25)) AS MV18,
    (POWER(ABS(RM + 1.25), 1.5)) AS MV19,
    (POWER(ABS(RM + 1.25), 1.25)) AS MV20,
	(POWER(ABS(RM + 0.75), 1.5)) AS MV21,
    (POWER(ABS(RM + 0.75), 1.25)) AS MV22,
	(POWER(ABS(RM + 0.5), 1.75)) AS MV23,
    (POWER(ABS(RM + 0.5), 1.25)) AS MV24,
    (POWER(ABS(RM + 1), 2.0)) AS MV25,
    (POWER(ABS(RM + 1), 1.75)) AS MV26,
	(POWER(ABS(RM + 0.75), 2.0)) AS MV27,
	(POWER(ABS(RM + 0.75), 1.75)) AS MV28,
    (POWER(ABS(RM + 0.5), 1.15)) AS MV29,
    (POWER(ABS(RM + 0.75), 1.15)) AS MV30,
	(POWER(ABS(RM + 1), 1.15)) AS MV31,
	(POWER(ABS(RM + 1.25), 1.15)) AS MV32,
	((-0.119048*POWER(OM, 2)) + (-0.0714286 * OM) + 5.47619) AS MV33,
	((-0.0227273*POWER(OM, 4)) + (0.328283*POWER(OM, 3)) + (-1.62879*POWER(OM, 2)) + (2.18903 * OM) + 5.02597) AS MV34,
	((0.0555556*POWER(OM, 3)) + (-0.559524*POWER(OM, 2)) + (0.0861111 * OM) + 4.19048) AS MV35,
	((-0.0378788*POWER(OM, 4)) + (0.510101*POWER(OM, 3)) + (-2.24242*POWER(OM, 2)) + (2.7767 * OM) + 3.99567) AS MV36,
	((0.111111*POWER(OM, 3)) + (-1.11905*POWER(OM, 2)) + (2.00794 * OM) + 5.52381) AS MV37,
	((-0.0757576*POWER(OM, 4)) + (1.0202*POWER(OM, 3)) + (-4.48485*POWER(OM, 2)) + (5.83911 * OM) + 5.1342) AS MV38,
	((-0.0530303*POWER(OM, 4)) + (0.691919*POWER(OM, 3)) + (-2.85606*POWER(OM, 2)) + (2.65007 * OM) + 7.10823) AS MV39,
	((0.0555556*POWER(OM, 3)) + (-0.559524*POWER(OM, 2)) + (0.503968 * OM) + 6.2619) AS MV40,
	((-0.0378788*POWER(OM, 4)) + (0.510101*POWER(OM, 3)) + (-2.24242*POWER(OM, 2)) + (2.41955 * OM) + 6.0671) AS MV41,
	((-0.0595238*POWER(OM, 2)) + (-0.535714 * OM) + 6.2381) AS MV42,
    ((0.0277778*POWER(OM, 3)) + (-0.309524*POWER(OM, 2)) + (0.0198413 * OM) + 6.07143) AS MV43,
	((-0.0113636*POWER(OM, 4)) + (0.164141*POWER(OM, 3)) + (-0.814394*POWER(OM, 2)) + (0.594517 * OM) + 6.01299) AS MV44,
	((-0.159091*POWER(OM, 4)) + (2.65152*POWER(OM, 3)) + (-14.1136*POWER(OM, 2)) + (19.7121 * OM) + 25.6364) AS MV45,
	((-0.0397727*POWER(OM, 4)) + (0.592172*POWER(OM, 3)) + (-2.78598*POWER(OM, 2)) + (3.20978 * OM) + 6.23485) AS MV46,
	((0.040056*POWER(OM, 2)) + (-1.44905 * OM) + 8.18667) AS MV47,
	((-0.023172*POWER(OM, 4)) + (0.338635*POWER(OM, 3)) + (-1.522*POWER(OM, 2)) + (0.901504 * OM) + 7.62107) AS MV48,
	((-0.0535714*POWER(OM, 2)) + (-0.279762 * OM) + 4.54167) AS MV49,
    ((0.0227273*POWER(OM, 3)) + (-0.292208*POWER(OM, 2)) + (0.345238 * OM) + 4.30303) AS MV50,
	((-0.0217803*POWER(OM, 4)) + (0.327652*POWER(OM, 3)) + (-1.61458*POWER(OM, 2)) + (2.13122 * OM) + 4.04167) AS MV51,
	((-0.0327381*POWER(OM, 2)) + (-0.467262 * OM) + 4.89583) AS MV52,
	((-0.0184659*POWER(OM, 4)) + (0.272412*POWER(OM, 3)) + (-1.29972*POWER(OM, 2)) + (1.42889 * OM) + 4.52841) AS MV53,
	((-0.0625*POWER(OM, 2)) + (-0.235119 * OM) + 4.60417) AS MV54,
    ((0.0315657*POWER(OM, 3)) + (-0.393939*POWER(OM, 2)) + (0.632937 * OM) + 4.27273) AS MV55,
	((-0.0232008*POWER(OM, 4)) + (0.356376*POWER(OM, 3)) + (-1.80256*POWER(OM, 2)) + (2.5354 * OM) + 3.99432) AS MV56,
	((-0.0333807*POWER(OM, 4)) + (0.504577*POWER(OM, 3)) + (-2.4401*POWER(OM, 2)) + (3.20051 * OM) + 4.15625) AS MV57,
    ((0.0246212*POWER(OM, 3)) + (-0.286797*POWER(OM, 2)) + (0.217262 * OM) + 4.31439) AS MV58,
	((-0.0210701*POWER(OM, 4)) + (0.319602*POWER(OM, 3)) + (-1.56605*POWER(OM, 2)) + (1.94501 * OM) + 4.06155) AS MV59,
	((-0.119048*POWER(OM, 2)) + (-0.0714286 * OM) + 6.47619) AS MV60,
    ((0.0555556*POWER(OM, 3)) + (-0.619048*POWER(OM, 2)) + (1.03968 * OM) + 6.14286) AS MV61,
	((-0.0227273*POWER(OM, 4)) + (0.328283*POWER(OM, 3)) + (-1.62879*POWER(OM, 2)) + (2.18903 * OM) + 6.02597) AS MV62,
	((-0.1668*POWER(OM, 2)) + (0.186683 * OM) + 5.73172) AS MV63,
    ((0.105941*POWER(OM, 3)) + (-1.10779*POWER(OM, 2)) + (2.26271 * OM) + 4.97658) AS MV64,
	((-0.00521276*POWER(OM, 4)) + (0.167783*POWER(OM, 3)) + (-1.33253*POWER(OM, 2)) + (2.51055 * OM) + 4.94974) AS MV65,
	((-0.188739*POWER(OM, 2)) + (0.323127 * OM) + 4.6662) AS MV66,
    ((0.103445*POWER(OM, 3)) + (-1.10756*POWER(OM, 2)) + (2.35024 * OM) + 3.92885) AS MV67,
	((0.00652124*POWER(OM, 4)) + (0.026081*POWER(OM, 3)) + (-0.826406*POWER(OM, 2)) + (2.04019 * OM) + 3.96243) AS MV68
FROM
(
    SELECT DISTINCT [Year]
    FROM [HINDCAST].[DAT_Model]
) m
CROSS APPLY
(
    SELECT
        *
    FROM [HINDCAST].[VIEW_HistoricMatch]
    WHERE [Year]=m.[Year]
) h
CROSS APPLY
(
    SELECT
        DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]) AS START_FROM,
        [Value] AS AVG_VALUE,
        DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE) AS OM,
        (@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)) AS RM,
        [Value],
        (POWER((@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)), @MonthPower)) AS MV,
        (POWER(2, (@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)))) AS MV2,
        (POWER(@MonthPower, (@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)))) AS MV3,
        (POWER((@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)), 2)) AS MV4,
        (POWER((@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)), 1.5)) AS MV5,
        (POWER((@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)), 1.25)) AS MV6,
        (POWER((@NumberMonths - DATEDIFF(MM, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]), FAKE_DATE)), 1.75)) AS MV7
    FROM [HINDCAST].[VIEW_HistoricMatch]
    WHERE
        [FAKE_DATE] >= DATEADD(MM, @OffsetMonths, h.[FAKE_DATE])
        -- not <= because that would be @NumberMonths + 1 months
        AND [FAKE_DATE] < DATEADD(MM, @NumberMonths, DATEADD(MM, @OffsetMonths, h.[FAKE_DATE]))
) s
WHERE MONTH(FAKE_DATE)=MONTH(GETDATE())
) a
GROUP BY [Year], [NumberMonths], [START_FROM]
ORDER BY [Year] DESC