# docker-compose build
version: '3.9'
volumes:
  dbbackups:
  postgis-data:

services:
  db:
    build:
      context: .
      dockerfile: .docker/Dockerfile_db
    deploy:
      mode: global
    image: kartoza/postgis:13-3.1
    volumes:
      - postgis-data:/var/lib/postgresql
      - dbbackups:/backups
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=FireGUARD
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    ports:
      - 25432:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"

  db-backups:
    image: kartoza/pg-backup:13.0
    deploy:
      mode: global
    volumes:
      - dbbackups:/backups
    environment:
      - DUMPPREFIX=PG_db
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - POSTGRES_DBNAME=FireGUARD
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  wxshield:
    build:
      context: .
      dockerfile: .docker/Dockerfile_gui
    deploy:
      mode: global
    image: "webdevops/php-nginx"
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - type: bind
        source: ./settings.ini
        target: /app/wxshield/settings.ini
      - type: bind
        source: ./WeatherSHIELD/gui
        target: /app/wxshield/
    depends_on:
      db:
        condition: service_healthy

  wxcli:
    build:
      context: .
      dockerfile: .docker/Dockerfile_wxcli
    image: python:3.6-slim
    volumes:
      - type: bind
        source: ./settings.ini
        target: /FireGUARD/settings.ini
      - type: bind
        source: ./data
        target: /FireGUARD/data
      - type: bind
        source: ./WeatherSHIELD
        target: /FireGUARD/WeatherSHIELD
      - type: bind
        source: ./util
        target: /FireGUARD/util

  gis:
    build:
      context: .
      dockerfile: .docker/Dockerfile_gis
    image: thinkwhere/gdal-python
    volumes:
      - type: bind
        source: ./settings.ini
        target: /FireGUARD/settings.ini
      - type: bind
        source: ./data
        target: /FireGUARD/data
      - type: bind
        source: ./GIS
        target: /FireGUARD/GIS
      - type: bind
        source: ./util
        target: /FireGUARD/util

  firestarr:
    build:
      context: .
      dockerfile: .docker/Dockerfile_firestarr
    image: gcc:10.3
    volumes:
      - type: bind
        source: ./settings.ini
        target: /FireGUARD/settings.ini
      - type: bind
        source: ./data
        target: /FireGUARD/data
      - type: bind
        source: ./FireSTARR
        target: /FireGUARD/FireSTARR
      - type: bind
        source: ./data/generated/tiled
        target: /FireGUARD/100m/default
